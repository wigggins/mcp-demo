// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  children Child[]
  bookings Booking[]

  @@map("users")
}

model Child {
  id          String    @id @default(uuid())
  firstName   String
  lastName    String
  dateOfBirth DateTime
  allergies   String?
  medicalInfo String?
  emergencyContact String?
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  bookings Booking[]

  @@map("children")
}

model Booking {
  id          String        @id @default(uuid())
  userId      String
  childId     String
  serviceType String        // e.g., "full-day", "half-day", "hourly"
  startDate   DateTime
  endDate     DateTime
  startTime   String        // e.g., "08:00"
  endTime     String        // e.g., "17:00"
  status      BookingStatus @default(PENDING)
  specialRequests String?
  totalCost   Decimal?      @db.Decimal(10, 2)
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  child Child @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@map("bookings")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
} 